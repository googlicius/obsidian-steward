/* Style for the commands when typing */
.cm-line .cm-conversation-command {
  color: var(--text-accent-hover);
  font-weight: bold;

  &[has-placeholder='1']:after {
    content: var(--stw-placeholder-text);
    position: absolute;
    font-style: italic;
    font-size: 0.9em;
    color: #888;
    margin-left: var(--size-2-2);
    margin-top: var(--size-2-1);
    opacity: 0.7;
    font-weight: normal;
    background: none;
    cursor: text;
    -webkit-text-fill-color: #888;
  }

  &.conversation-command-general[has-placeholder='1']:after {
    margin-left: 0;
  }
}

.stw-input-line {
  background-color: rgba(255, 255, 255, 0.1);

  /* First line in a block: not preceded by another block line */
  &:not(.stw-input-line + .stw-input-line) {
    padding-top: 5px !important;
  }

  /* Last line in a block: no next sibling is a block line */
  &:not(:has(+ .stw-input-line)) {
    padding-bottom: 5px !important;
  }
}

/* Bordered input styling when enabled */
body.stw-bordered-input .stw-input-line {
  border-left: thin solid var(--background-modifier-border);
  border-right: thin solid var(--background-modifier-border);
  margin: 0;

  /* First line in a block: add top border */
  &:not(.stw-input-line + .stw-input-line) {
    border-top: thin solid var(--background-modifier-border);
    border-top-left-radius: var(--radius-s);
    border-top-right-radius: var(--radius-s);
  }

  /* Last line in a block: add bottom border */
  &:not(:has(+ .stw-input-line)) {
    border-bottom: thin solid var(--background-modifier-border);
    border-bottom-left-radius: var(--radius-s);
    border-bottom-right-radius: var(--radius-s);
  }
}

/* Command Autocomplete styling */
.cm-tooltip.cm-tooltip-autocomplete {
  border: 1px solid var(--background-modifier-border);
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);

  & > ul {
    font-family: var(--font-interface);
    background-color: var(--background-primary);
    color: var(--text-normal);
    overflow: hidden;
    max-height: 200px;

    & > li {
      padding: 4px 8px;
      border-bottom: 1px solid var(--background-modifier-border-hover);

      &[aria-selected] {
        background-color: var(--background-modifier-hover);
      }
    }

    & .cm-completionLabel {
      color: var(--text-accent-hover);
      font-weight: 500;
    }

    & .cm-completionDetail {
      font-size: 0.85em;
      color: var(--text-muted);
      margin-left: 8px;
    }
  }
}

.stw-chat {
  & .inline-embed .markdown-embed-content {
    max-height: none;
  }

  & .markdown-embed {
    --embed-padding: 0 0 15px 0;
    border: 0;
    border-bottom: 1px solid var(--background-modifier-border);
    background-color: transparent;
  }
}

.callout[data-callout='stw-search-result'] {
  --callout-color: var(--callout-success);
  padding-left: 12px;
  cursor: pointer;
  transition:
    background-color 0.2s ease,
    transform 0.1s ease;
  margin-bottom: 10px !important;

  &:active {
    transform: translateX(2px);
  }

  & > .callout-title {
    display: none;
  }
}

/* User message callout styling */
.callout[data-callout='stw-user-message'] {
  --callout-color: var(--callout-quote);
  margin-bottom: 10px !important;
  margin-top: 20px !important;
  padding-left: 0px;
  font-weight: calc(var(--font-weight) + var(--bold-modifier));
  position: relative;

  & > .callout-title {
    display: none;
  }

  & > .callout-content {
    padding-left: 8px;
  }
}

.workspace-leaf-content[data-type='steward-conversation'] .view-content {
  padding-left: 0;
  padding-right: 0;
  padding-top: 0;
  overflow: hidden;
}

.workspace-leaf-content[data-type='steward-conversation']
  .view-content
  > .markdown-source-view.mod-cm6
  > .cm-editor
  > .cm-scroller {
  padding: 15px;
}

.steward-conversation-header {
  display: flex;
  gap: 4px;
  padding: 4px;
  justify-content: flex-end;
}

.steward-header-button {
  display: flex;
  align-items: center;
  justify-content: center;
  padding: var(--size-2-2);
  border-radius: var(--radius-s);
  cursor: pointer;
  background-color: transparent;
  color: var(--text-muted);

  &:hover {
    color: var(--text-normal);
  }
}

.stw-conversation .callout-content :is(ul, p, ol) {
  margin: 6px 0;
  line-height: 1.4em;
  overflow: hidden;
}

/* Command toolbar styling */
.command-toolbar {
  position: absolute;
  margin-top: 5px;
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 4px 8px;
  background-color: var(--color-base-20);
  border: 1px solid var(--background-modifier-border);
  border-radius: 4px;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);
  z-index: 10;
  width: 100%;
  max-width: 500px;
}

.command-toolbar .clickable-icon {
  cursor: pointer;
}

.command-toolbar-buttons {
  display: flex;
  gap: 4px;
}

.model-selector {
  font-size: 0.85em;
  padding: 4px 8px;
  border-radius: 4px;
  box-shadow: none;
  color: var(--text-normal);
  background-color: inherit;
}

pre[class*='language-stw-artifact'],
code[class*='language-stw-artifact'] {
  display: none;
}

/* User message buttons styling */
.stw-user-message-buttons {
  position: absolute;
  top: var(--size-2-1);
  right: var(--size-2-1);
  display: flex;
  gap: var(--size-2-2);
  opacity: 0;
  transition: opacity 0.2s ease;
}

.callout[data-callout='stw-user-message']:hover .stw-user-message-buttons {
  opacity: 1;
}

.stw-user-message-button {
  background-color: var(--background-modifier-hover);
  border: none;
  border-radius: var(--radius-s);
  color: var(--text-muted);
  cursor: pointer;
  padding: var(--size-2-1);
  display: flex;
  align-items: center;
  justify-content: center;
  transition:
    background-color 0.2s ease,
    color 0.2s ease;

  &:hover {
    background-color: var(--background-modifier-border);
    color: var(--text-normal);
  }
}

.stw-selected-button {
  background: linear-gradient(to right, #0000ff, #00bebe);
  -webkit-background-clip: text;
  background-clip: text;
  color: transparent;
  border-radius: var(--radius-s);
  border: thin solid var(--background-modifier-border);
  cursor: pointer;
  font-size: 0.9em;
  padding: var(--size-2-1);
}

/* Visibility classes for settings */
.stw-setting-hidden {
  display: none;
}

.stw-setting-visible {
  display: flex;
}

/* Placeholder text classes for different languages */
:root {
  --stw-placeholder-text: 'Press Enter to send';
}

html[data-stw-language='en'] {
  --stw-placeholder-text: 'Press Enter to send';
}

html[data-stw-language='ja'] {
  --stw-placeholder-text: 'Enterキーを押して送信';
}

html[data-stw-language='vi'] {
  --stw-placeholder-text: 'Nhấn Enter để gửi';
}

.mr-2 {
  margin-right: var(--size-2-2);
}
