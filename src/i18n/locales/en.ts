const en = {
  translation: {
    common: {
      noFilesFound:
        "I couldn't find any files matching your query. Please try a different search term.",
      noRecentOperations: 'No recent operations found.',
      abortedByLowConfidence: 'Aborted by low confidence.',
      noToolCallFound: 'No tool call found.',
      lowConfidenceConfirmation:
        "I'm not entirely sure about this request. Would you like me to proceed anyway?",
      artifactCreated: 'Artifact {{type}} is created',
      cannotUpdateThisType:
        'Cannot update this type of artifact. Only search results, created notes, read content, and content updates can be updated.',
      availableCommands: 'Available commands',
      builtInCommands: 'Built-in commands',
      builtInCommandsDesc: 'These commands are directly accessible via /&lt;command&gt',
      userDefinedCommands: 'User-Defined commands',
      noUserDefinedCommands: "You don't have any user-defined commands yet.",
      intentCommands: 'Intent-Based commands',
      intentCommandsDesc: 'These commands are available through natural language processing',
      commandHelpText: 'Type any command followed by your query to use it.',
      searchDesc: 'Search for notes in your vault',
      closeDesc: 'Close the current conversation',
      confirmDesc: 'Confirm or reject operations',
      imageDesc: 'Generate images',
      audioDesc: 'Generate audio from text',
      createDesc: 'Create new notes',
      stopDesc: 'Stop ongoing operations',
      helpDesc: 'Show this help message',
      moveDesc: 'Move files to another location',
      copyDesc: 'Copy files to another location',
      deleteDesc: 'Delete files',
      updateDesc: 'Update file content',
      generateDesc: 'Generate content with AI',
      readDesc: 'Read content from notes',
      buildSearchIndexDesc: 'Build the search index for your notes',
      cannotDeleteThisType: 'Cannot delete this type of artifact: {{type}}',
    },
    // Chat UI elements
    chat: {
      newChat: 'New chat',
      history: 'History',
      closeChat: 'Close chat',
      stewardChat: 'Steward Chat',
      closeConversation: 'Close conversation',
      conversationClosed: 'Conversation closed',
      squeezeConversation: 'Squeeze conversation',
      expandConversation: 'Expand conversation',
    },
    // Media generation messages
    media: {
      invalidCommand: 'Invalid media generation command',
      generationFailed: 'Failed to generate {{type}}: {{error}}',
      generationError: 'Error generating media: {{error}}',
    },
    // Move result messages
    move: {
      noSearchResultsFoundAbortMove: 'No search results found, aborting move command',
      foundFiles_one: 'I found {{count}} file matching your query.',
      foundFiles_other: 'I found {{count}} files matching your query.',
      successfullyMoved_one: 'Successfully moved {{count}} file:',
      successfullyMoved_other: 'Successfully moved {{count}} files:',
      skipped_one: 'Skipped {{count}} file (already in destination):',
      skipped_other: 'Skipped {{count}} files (already in destination):',
      failed_one: 'Failed to move {{count}} file:',
      failed_other: 'Failed to move {{count}} files:',
      multiMoveHeader: 'I performed {{count}} move operation:',
      multiMoveHeader_plural: 'I performed {{count}} move operations:',
      operation: 'Operation {{num}}: Moving files with {{query}} to {{folder}}',
      createFoldersHeader: 'I need to create the following folders before moving files:',
      createFoldersQuestion: 'Would you like me to create these folders?',
    },
    // Copy result messages
    copy: {
      noSearchResultsFoundAbortCopy: 'No search results found, aborting copy command',
      foundFiles_one: 'I found {{count}} file to copy.',
      foundFiles_other: 'I found {{count}} files to copy.',
      successfullyCopied_one: 'Successfully copied {{count}} file:',
      successfullyCopied_other: 'Successfully copied {{count}} files:',
      skipped_one: 'Skipped {{count}} file (already exists in destination):',
      skipped_other: 'Skipped {{count}} files (already exist in destination):',
      failed_one: 'Failed to copy {{count}} file:',
      failed_other: 'Failed to copy {{count}} files:',
      multiCopyHeader: 'I performed {{count}} copy operation:',
      multiCopyHeader_plural: 'I performed {{count}} copy operations:',
      operation: 'Operation {{num}}: Copying files with {{query}} to {{folder}}',
      noDestination: 'Please specify a destination folder for the copy operation.',
      createFoldersHeader: 'I need to create the following folders before copying files:',
      createFoldersQuestion: 'Would you like me to create these folders?',
      tooManyFilesConfirm: 'I am about to copy {{count}} files. Are you sure you want to proceed?',
    },
    create: {
      success_one: 'Successfully created {{noteName}}',
      success_other: 'Successfully created {{count}} notes: {{noteNames}}',
      creatingNote: 'Creating note: {{noteName}}',
      confirmMessage_one: 'I will create the following note:',
      confirmMessage_other: 'I will create the following notes:',
      confirmPrompt: 'Do you want to proceed?',
    },
    generate: {
      success: 'Successfully generated',
    },
    summary: {
      conversationSummary: 'CONVERSATION SUMMARY',
      noConversation: 'No conversation history to summarize',
    },
    // Command-specific messages
    stop: {
      stopped: 'Generation stopped.',
      stoppedWithCount_one: 'Stopped {{count}} active operation.',
      stoppedWithCount_other: 'Stopped {{count}} active operations.',
      noActiveOperations: 'No active operations to stop.',
    },
    // Update result messages
    update: {
      failed_one: 'Failed to update {{count}} file:',
      failed_other: 'Failed to update {{count}} files:',
      successfullyUpdated_one: 'Successfully updated {{count}} file:',
      successfullyUpdated_other: 'Successfully updated {{count}} files:',
      foundFiles_one: 'I found {{count}} file to update.',
      foundFiles_other: 'I found {{count}} files to update.',
      skipped_one: 'Skipped {{count}} file:',
      skipped_other: 'Skipped {{count}} files:',
      applyChangesConfirm: 'Would you like me to apply the changes?',
    },
    // Delete result messages
    delete: {
      foundFiles_one: 'I found {{count}} file to delete.',
      foundFiles_other: 'I found {{count}} files to delete.',
      successfullyDeleted_one: 'Successfully deleted {{count}} file:',
      successfullyDeleted_other: 'Successfully deleted {{count}} files:',
      failed_one: 'Failed to delete {{count}} file:',
      failed_other: 'Failed to delete {{count}} files:',
      multiDeleteHeader: 'I performed {{count}} delete operation:',
      multiDeleteHeader_plural: 'I performed {{count}} delete operations:',
      operation: 'Operation {{num}}: Deleting files with {{query}}',
      confirmHeader: 'I found the following files to delete:',
      confirmQuestion: 'Are you sure you want to delete these files? This action cannot be undone.',
    },
    // Search result messages
    search: {
      found_one: 'I found {{count}} result:',
      found_other: 'I found {{count}} results:',
      noResults: 'No results found. Would you like to try a different search term?',
      matches: 'Matches:',
      moreMatches: '... and {{count}} more match',
      moreMatches_plural: '... and {{count}} more matches',
      showMoreDetails: 'Type `/more` to show the next 10 results.',
      pagination: 'Page {{current}} of {{total}}',
      useMoreCommand: 'Type `/more` to see the next page of results.',
      noMoreResults: 'No more search results to show.',
      noRecentSearch: 'No recent search found. Please run a search command first.',
      moreResults: 'Here are more search results:',
      paginationStatus: 'Page {{current}} of {{total}} ({{count}} total results)',
      noMorePages: 'This is the last page of results.',
      searchingFor: 'Searching for "{{searchTerm}}"',
      searchingForTags: 'Searching for tags: {{tags}}',
      showingPage: 'Showing page {{page}} of {{total}}',
      multipleOperationsHeader: 'I interpreted {{count}} search operations in your query:',
      operation: 'Operation {{num}}',
      keywords: 'Keywords',
      tags: 'Tags',
      filenames: 'Filenames',
      folders: 'Folders',
      properties: 'Properties',
      confirmMultipleOperations:
        'Are these operations correct? Please confirm to proceed with the search.',
      indexNotBuilt: 'Search index is not built yet.',
      buildIndexFirst:
        'Please build the search index first by asking me to "Build search index" or "index my files".',
      buildingIndex: 'Building search index...',
      noFilesToIndex: 'No files found to index.',
      indexingProgress: 'Indexing progress: {{completed}} of {{total}} files completed.',
      indexingCompleted: 'Search index built successfully! {{count}} of {{total}} files indexed.',
      indexedFiles: 'Successfully indexed files',
      failedFiles: 'Files that failed to index',
      foundFilesForIndex: 'I found {{count}} files that can be indexed.',
      confirmRebuildIndexQuestion: 'Do you want to rebuild the search index?',
      privacyNotice: 'Note: The search index is processed and stored locally for privacy.',
      artifactDescription: 'Search results containing {{count}} documents',
      artifactNote:
        'The full search results are redacted but still can be accessed by other commands that need to work with the search results.',
    },
    // Close command messages
    close: {
      instruction: 'To close this conversation, use the /close command in your note.',
      completed: 'Conversation has been closed.',
    },
    // Confirmation messages
    confirmation: {
      notUnderstood: "I didn't understand your response. Please respond with 'yes' or 'no'.",
      noPending: 'There are no pending confirmations to respond to.',
      operationCancelled: 'Operation cancelled.',
      errorProcessing: 'Error processing confirmation: {{errorMessage}}',
    },
    // UI elements
    ui: {
      openStewardChat: 'Open Steward chat',
      buildingSearchIndex: 'Building search index...',
      errorBuildingSearchIndex: 'Error building search index. Check console for details.',
      buildingIndexes: 'Steward: Building indexes...',
      noActiveEditor: 'No active editor to close conversation: {{conversationTitle}}',
      conversationLinkNotFound: 'Could not locate the conversation link for {{conversationTitle}}',
      errorClosingConversation: 'Error closing conversation: {{errorMessage}}',
      errorCreatingNote: 'Error creating conversation note: {{errorMessage}}',
      noteNotFound: 'Conversation note not found: {{notePath}}',
      errorUpdatingConversation: 'Error updating conversation: {{errorMessage}}',
      searchIndexNotFound: 'Search index not found. Will build index shortly...',
      errorBuildingInitialIndexes:
        'Steward: Error building initial indexes. Check console for details.',
      decryptionError: 'Failed to decrypt API key. Please re-enter it in settings.',
      encryptionError: 'Failed to encrypt API key. Please try again.',
      welcomeMessage:
        'Welcome to your always-available Steward chat. Type below to interact or type `/ ?` to see available commands.',
      commandPlaceholder: 'Press Enter to send',
      addToInlineConversation: 'Steward: Add to the inline conversation',
      addToChat: 'Steward: Add to the chat',
      Copy: 'Copy',
      contentCopied: 'Content copied to clipboard',
      copyFailed: 'Failed to copy content to clipboard',
    },
    read: {
      noContentFound: 'No such content found in the editor.',
      readEntireContentConfirmation:
        'I am about to read the entire content of the {{noteName}} note. Are you sure you want to proceed?',
      unableToReadContent: 'Unable to read content.',
    },
    // Thank you responses
    thankYou: {
      response1: "You're welcome! Happy to help.",
      response2: 'My pleasure! Is there anything else you need?',
      response3: 'Glad I could assist!',
      response4: 'Anytime! Let me know if you need anything else.',
      response5: 'Happy to be of service!',
      simpleResponse: "You're welcome 😊",
    },
    // Conversation states
    conversation: {
      orchestrating: 'Orchestrating...',
      generating: 'Generating...',
      generatingImage: 'Generating image...',
      generatingAudio: 'Generating audio...',
      moving: 'Moving...',
      searching: 'Searching...',
      calculating: 'Calculating...',
      reverting: 'Reverting changes...',
      revertSuccess: 'Successfully reverted the last change.',
      revertFailed: 'Failed to revert changes. No previous changes to revert to.',
      copying: 'Copying...',
      deleting: 'Deleting...',
      updating: 'Updating...',
      creatingPrompt: 'Creating custom prompt...',
      creating: 'Creating...',
      readingContent: 'Reading content...',
      buildingIndex: 'Building search index...',
      summarizing: 'Summarizing conversation...',
      augmentingContext: 'Augmenting context...',
    },
    // Settings
    settings: {
      stewardFolder: 'Steward folder',
      stewardFolderDesc: 'Base folder where Steward data will be stored',
      borderedInput: 'Bordered input',
      borderedInputDesc:
        'Add border around command input lines (better visibility especially with light themes)',
      showRoleLabels: 'Show role labels',
      showRoleLabelsDesc: 'Show User/Steward/System labels in conversations',
      debugMode: 'Debug mode',
      debugModeDesc: 'Enable detailed logging in the console for debugging',
      apiKeys: 'API keys',
      openaiApiKey: 'OpenAI API key',
      elevenlabsApiKey: 'ElevenLabs API key',
      deepseekApiKey: 'DeepSeek API key',
      googleApiKey: 'Google API key',
      groqApiKey: 'Groq API key',
      anthropicApiKey: 'Anthropic API key',
      enterApiKey: 'Enter your API key',
      apiKeyPlaceholder: '••••••••••••••••••••••',
      errorReenterKey: 'Error: Click to re-enter key',
      clearApiKey: 'Clear API key',
      failedToSaveApiKey: 'Failed to save API key. Please try again.',
      failedToClearApiKey: 'Failed to clear API key. Please try again.',
      note: 'Note',
      apiKeyNote1: 'You need to provide your own API keys to use the AI-powered assistant.',
      apiKeyNote2: 'All API keys are stored with encryption.',
      decryptionErrorNote:
        'If you are seeing decryption errors, please use the "Reset Encryption" button and re-enter your API keys.',
      llm: 'LLM',
      chatModel: 'Chat model',
      chatModelDesc: 'Select the AI model to use for chat',
      embeddingModel: 'Embedding model',
      embeddingModelDesc: 'Model used for text embeddings (currently fixed to GPT-4)',
      temperature: 'Temperature',
      temperatureDesc: 'Controls randomness in the output (0.0 to 1.0)',
      maxGenerationTokens: 'Max generation tokens',
      maxGenerationTokensDesc:
        'Maximum number of tokens to generate in response (higher values may increase API costs)',
      ollamaBaseUrl: 'Ollama base URL',
      ollamaBaseUrlDesc: 'The base URL for Ollama API (default: {{defaultUrl}})',
    },
  },
};

export default en;
