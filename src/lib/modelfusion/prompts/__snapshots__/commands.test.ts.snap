// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`commands artifactDependentExamples should return examples for commands that depend on artifacts 1`] = `"For example: if you include "search" and "move_from_artifact", the "move_from_artifact" command will use the artifact that will be created from the "search" command or "read" and "update_from_artifact", the "update_from_artifact" command will use the artifact that will be created from the "read" command."`;

exports[`commands artifactDependentExamples should return only one example if there are only one command that creates artifacts 1`] = `"For example: if you include "read" and "update_from_artifact", the "update_from_artifact" command will use the artifact that will be created from the "read" command."`;

exports[`commands formatCommandsForPrompt should return formatted commands for prompt 1`] = `
"<commands>
	<command name="search">
		<description>Find files using the search engine to search files locally and store the result as an artifact</description>
		<use_when>Search for files (and doesn't mention existing search results)</use_when>
	</command>
	<command name="close">
		<description>Close the conversation or exit</description>
		<use_when>Close the conversation</use_when>
	</command>
	<command name="confirm" aliases="yes, no">
		<description>Confirm or reject the current command to proceed</description>
	</command>
	<command name="image">
		<description>Generate an image</description>
		<use_when>Generate an image</use_when>
	</command>
	<command name="audio" aliases="speak">
		<description>Generate audio from text</description>
		<use_when>Generate audio</use_when>
	</command>
	<command name="create">
		<description>Create a new note with their own content</description>
		<use_when>Create a new note</use_when>
	</command>
	<command name="move_from_artifact" aliases="move">
		<description>Move notes from the artifact to a destination</description>
		<use_when>Move notes from the artifact</use_when>
	</command>
	<command name="copy_from_artifact" aliases="copy">
		<description>Copy notes from the artifact to a destination</description>
		<use_when>Copy notes from the artifact</use_when>
	</command>
	<command name="update_from_artifact" aliases="update">
		<description>Update note(s) from the artifact</description>
		<use_when>Update one or more notes from the artifact</use_when>
	</command>
	<command name="delete_from_artifact" aliases="delete">
		<description>Delete note(s) from the artifact</description>
		<use_when>Delete notes from the artifact</use_when>
	</command>
	<command name="build_search_index" aliases="index, build-index, search-index">
		<description>Build or rebuild the search index for all markdown files in the vault</description>
		<use_when>Build or rebuild the search index for all markdown files in the vault</use_when>
	</command>
	<command name="read">
		<description>Read text contents, images from the current note in specific position: "above", "below". OR from the other notes. Use this when you don't know the content and need to retrieve it before proceeding
  - Can read any content type, including code blocks, tables, lists, paragraphs, and more.
  - Can multiple notes at once.
  - Can read when the note's name or position (above or below) is provided, no location needed.</description>
		<use_when>Read or Find content based on a specific pattern in their current note</use_when>
	</command>
	<command name="generate">
		<description>Generate content with the LLM help.
If you see the source content is already included in the user's query, you can use "generate" without the need of reading additional content. Example: "Help me update this list to the numbered list:
- Item 1
- Item 2".
Otherwise, you need to include the "read" command.</description>
		<use_when>Ask, update, or generate content with your help</use_when>
	</command>
</commands>"
`;

exports[`commands formatCommandsForPrompt should return formatted commands for prompt with given command names 1`] = `
"<commands>
	<command name="search">
		<description>Find files using the search engine to search files locally and store the result as an artifact</description>
		<use_when>Search for files (and doesn't mention existing search results)</use_when>
	</command>
	<command name="read">
		<description>Read text contents, images from the current note in specific position: "above", "below". OR from the other notes. Use this when you don't know the content and need to retrieve it before proceeding
  - Can read any content type, including code blocks, tables, lists, paragraphs, and more.
  - Can multiple notes at once.
  - Can read when the note's name or position (above or below) is provided, no location needed.</description>
		<use_when>Read or Find content based on a specific pattern in their current note</use_when>
	</command>
</commands>"
`;

exports[`commands formatCurrentArtifacts should return formatted current artifacts for prompt 1`] = `
"Current artifacts in the conversation can be used by artifact-dependent commands:
- search_results
- read_content"
`;
